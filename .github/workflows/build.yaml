name: "Build"
on:
  pull_request:

# stop in-progress on new push
concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

env:
  CARGO_TERM_COLOR: always
  FOUNDRY_PROFILE: ci

jobs:
  cargo-fmt:
    name: cargo fmt
    runs-on: ubuntu-latest
    steps:
      - name: Check-Out
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: cargo fmt
        run: cargo fmt --all -- --check

  cargo-check:
    name: cargo check
    runs-on: ubuntu-latest
    steps:
      - name: Check-Out
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1
        with:
          version: stable

      - uses: Swatinem/rust-cache@v2
        with:
          cache-on-failure: true

      - name: cargo check --workspace --all-features
        run: cargo check --workspace --all-features

  cargo-clippy:
    name: cargo clippy
    runs-on: ubuntu-latest
    steps:
      - name: Check-Out
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1
        with:
          version: stable

      - uses: Swatinem/rust-cache@v2
        with:
          cache-on-failure: true

      - name: cargo clippy --workspace --all-features
        run: cargo clippy --workspace --all-features

  cargo-test:
    name: cargo test
    runs-on: ubuntu-latest
    steps:
      - name: Check-Out
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1
        with:
          version: stable

      - uses: Swatinem/rust-cache@v2
        with:
          cache-on-failure: true

      - name: cargo test --workspace --all-features
        run: cargo test --workspace --all-features

  contracts:
    name: "Build, Format & Test Contracts"
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./contracts
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1
        with:
          version: stable
      - name: Install uv
        uses: astral-sh/setup-uv@v3
        with:
          version: "0.4.18"
      - name: Setup python virtual environment
        run: uv venv .venv --python 3.12
      - name: Sync python dependencies
        run: uv pip install -r requirements.txt
      - name: Show Forge version
        run: forge --version
      - name: Run Forge fmt
        run: forge fmt --check
        id: fmt
      - name: Run Forge tests
        run: forge test -vvv --ffi
        id: test
