// SPDX-License-Identifier: MIT
pragma solidity ^0.8.0;

import {Test} from "forge-std/Test.sol";
import {SafeTransferLib} from "solady/src/utils/SafeTransferLib.sol";
import {console} from "forge-std/console.sol";

import {Vm} from "forge-std/Vm.sol";

/// @author philogy <https://github.com/philogy>
contract ForkBenchmarkTest is Test {
    using SafeTransferLib for address;

    uint256 mainnetFork;

    address internal constant ANG = 0x0000000AA8c2Fb9b232F78D2B286dC2aE53BfAD4;
    address internal constant UNI_V4 = 0x000000000004444c5dc75cB358380D2e3dE08A90;
    address internal constant CONTROLLER = 0x16eD937987753a50f9Eb293eFffA753aC4313db0;

    function() internal pure returns (bytes32, address, address, bytes memory) internal
        current_scenario = neg_reward_swap;

    function setUp() public {
        vm.allowCheatcodes(ANG);
        (bytes32 txhash,,,) = current_scenario();
        mainnetFork = vm.createSelectFork("http://127.0.0.1:8545", txhash);
        vm.roll(vm.getBlockNumber() + 1);

        deployCodeTo("src/Angstrom.sol", abi.encode(UNI_V4, CONTROLLER), ANG);
    }

    function test_stuff() public {
        (, address sender, address to, bytes memory data) = current_scenario();
        console.log("to.codehash: %x", uint256(to.codehash));
        vm.prank(sender, sender);
        (bool success,) = to.call(data);
        require(success);
    }

    function execute_at_divergence()
        internal
        pure
        returns (bytes32 txhash, address sender, address to, bytes memory data)
    {
        txhash = 0xbc91b961060e3ad6d02e74e1d3cb36450fde4efad949fc9778f544f2784185fe;
        sender = 0xC41Ae140cA9B281d8A1dC254C50e446019517D04;
        to = ANG;
        data =
            hex"09c5eabe000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000001e3000088a0b86991c6218b36c1d19d4a2e9eb0ce3606eb4800000000000000000000000000071c3f00000000000000000000000005209ab000000000000000000000000000000000c02aaa39b223fe8d0a0e5c4f27ead9083c756cc200000000000000000000000000000000000000000000000000000000000000000000000000000000007c8f6e8ef1b0e0000026000000010000000000000000000000000000000000000052239e1040ef368f470a3331da3a5a00006d0000000000000000000000007c8f6e8ef1b0e00305d4000000000000000000009da2c70201560000300000000000000000000000000021a09f00000000000000000000000000043da50000000000000000000000000014aeebc3cb192d02af6297557770ed62f879a597bc31390000000000b9d20000000000000000000000000000000000000000000000000000000000001f4ad7542d6035833ac66ac9edda9d19deeededf0f6cb8924e032a6c85b05d0566afa00000686978e20000000000000000007c8f6e8ef1b0e0000000000000000000000000000ac7b0000000000000000000000000000700261b90fdc817c74b716699af4e5aabe0981c00ee0a6fba8eb3fc09350b2d3e4a096b26b85dc8a9c5bdf75ff6e39bcda3999ff4b7ad2add547242415cc8371e7a397d0000000000000000000000000000000000000000000000000000000000";
    }

    function position_creation()
        internal
        pure
        returns (bytes32 txhash, address sender, address to, bytes memory data)
    {
        txhash = 0xb45e592d364f1c1253cbe6c07e0626999bbb23a1a795cd460065ef2126461e94;
        sender = 0x4b716b2d4a352738B72a181F051b24De20317Ff3;
        to = 0x6FfF62f96E6ADadC84bCeF64e6496dF9F1d6be2C;
        data =
            hex"70fa16ee0000000000000000000000000000000000000000000000000001691fbc4128000000000000000000000000000000000000000000000000000000000000000040000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000c0000000000000000000000000000000000000000000000000000000000003051600000000000000000000000000000000000000000000000000000000000305d40000000000000000000000000000000000000000000000000000739cddb1181b00000000000000000000000000000000000000000000000000000000026cf38b000000000000000000000000000000000000000000000000003c3473b5eceaf6000000000000000000000000000000000000000000000000000000006868c9a7";
    }

    function haywire_unlock_swap()
        internal
        pure
        returns (bytes32 txhash, address sender, address to, bytes memory data)
    {
        txhash = 0x72fe9021e3686c6733be0367aa27d20bceceef27a644dc74c34d48ba8d083cf1;
        sender = 0x3eA68f362520Bfa09D2deFC6169eEDF9E9b70408;
        to = 0x22A956C4755d8C4294b358dC346E74250E175622;
        data =
            hex"12aa3caf000000000000000000000000037c1198043e0001070088e6a0c2ddd26feeb64f039a2c41296fcb3f56400044128acb0800000000000000000000000022a956c4755d8c4294b358dc346e74250e1756220000000000000000000000000000000000000000000000000000000000000000000000000000000000000000fffd8963efd1fc6a506488495d951d5263988d2500000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000003730009080000000104020200031e000007035b50ccaf4318ec4c4768b84bd62a2e466329e11f004448c89491000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000002e000000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000265013e00010701000000000004444c5dc75cb358380d2e3de08a9000c4f3cd914c000000000000000000000000a0b86991c6218b36c1d19d4a2e9eb0ce3606eb48000000000000000000000000c02aaa39b223fe8d0a0e5c4f27ead9083c756cc20000000000000000000000000000000000000000000000000000000000800000000000000000000000000000000000000000000000000000000000000000000a0000000000000000000000000000000aa8c2fb9b232f78d2b286dc2ae53bfad4000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000001000276a40000000000000000000000000000000000000000000000000000000000000120000000000000000000000000000000000000000000000000000000000000000000230105050000000000000000000000000000000100000000000000000000000000000000005e00000700000000000004444c5dc75cb358380d2e3de08a9000440b0d9c09000000000000000000000000c02aaa39b223fe8d0a0e5c4f27ead9083c756cc200000000000000000000000022a956c4755d8c4294b358dc346e74250e175622003e00070700000000000004444c5dc75cb358380d2e3de08a900024a5841194000000000000000000000000a0b86991c6218b36c1d19d4a2e9eb0ce3606eb48003e00020700a0b86991c6218b36c1d19d4a2e9eb0ce3606eb480024a9059cbb000000000000000000000000000000000004444c5dc75cb358380d2e3de08a90001e00070700000000000004444c5dc75cb358380d2e3de08a90000411da60b4000000000000000000000000000000000000000000000000000000003e00020700c02aaa39b223fe8d0a0e5c4f27ead9083c756cc20024a9059cbb00000000000000000000000088e6a0c2ddd26feeb64f039a2c41296fcb3f56400003010002000103000000000000000000000000000002060600110400000000000000000000434f15e900de0004050000f9";
    }

    function neg_reward_swap()
        internal
        pure
        returns (bytes32 txhash, address sender, address to, bytes memory data)
    {
        sender = 0x5B6Fc74F269C731840A74ae478d2C3d555E6A316;
        to = 0x22A956C4755d8C4294b358dC346E74250E175622;
        txhash = 0xe62cb990c60ef3a31b0147f5ad833bd81e631152b0c7a5c6b64ec9abd66ccc0d;
        data =
            hex"12aa3caf0000000000000000003ad47442a689fd041e00010700e0554a476a092703abdb3ef35c80e0d76d32939f0044128acb0800000000000000000000000022a956c4755d8c4294b358dc346e74250e175622000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000001000276a400000000000000000000000000000000000000000000000000000000000000a00000000000000000000000000000000000000000000000000000000000000357000207040009080000000104020200033e000207035b50ccaf4318ec4c4768b84bd62a2e466329e11f004448c894910000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000030000000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000297013e00000701000000000004444c5dc75cb358380d2e3de08a9000c4f3cd914c000000000000000000000000a0b86991c6218b36c1d19d4a2e9eb0ce3606eb48000000000000000000000000c02aaa39b223fe8d0a0e5c4f27ead9083c756cc20000000000000000000000000000000000000000000000000000000000800000000000000000000000000000000000000000000000000000000000000000000a0000000000000000000000000000000aa8c2fb9b232f78d2b286dc2ae53bfad40000000000000000000000000000000000000000000000000000000000000000000000000000000000000000fffd8963efd1fc6a506488495d951d5263988d2500000000000000000000000000000000000000000000000000000000000001200000000000000000000000000000000000000000000000000000000000000000002301050500000000000000000000000000000001000000000000000000000000000000000023010405ffffffffffffffffffffffffffffffff0000000000000000000000000000000000020601000207020003060802005e00000700000000000004444c5dc75cb358380d2e3de08a9000440b0d9c09000000000000000000000000a0b86991c6218b36c1d19d4a2e9eb0ce3606eb48000000000000000000000000e0554a476a092703abdb3ef35c80e0d76d32939f003e00070700000000000004444c5dc75cb358380d2e3de08a900024a5841194000000000000000000000000c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2003e00020700c02aaa39b223fe8d0a0e5c4f27ead9083c756cc20024a9059cbb000000000000000000000000000000000004444c5dc75cb358380d2e3de08a90001e00070701000000000004444c5dc75cb358380d2e3de08a90000411da60b4000000000000000000000301010400010300000000000000000000020606001104000000000000000000004568e0fb19360004050000f9";
    }
}
