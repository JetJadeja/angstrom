{"abi":[{"type":"function","name":"permit","inputs":[{"name":"spender","type":"address","internalType":"address"},{"name":"tokenId","type":"uint256","internalType":"uint256"},{"name":"deadline","type":"uint256","internalType":"uint256"},{"name":"nonce","type":"uint256","internalType":"uint256"},{"name":"signature","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"payable"},{"type":"function","name":"permitForAll","inputs":[{"name":"owner","type":"address","internalType":"address"},{"name":"operator","type":"address","internalType":"address"},{"name":"approved","type":"bool","internalType":"bool"},{"name":"deadline","type":"uint256","internalType":"uint256"},{"name":"nonce","type":"uint256","internalType":"uint256"},{"name":"signature","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"payable"},{"type":"error","name":"NoSelfPermit","inputs":[]},{"type":"error","name":"SignatureDeadlineExpired","inputs":[]},{"type":"error","name":"Unauthorized","inputs":[]}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"permit(address,uint256,uint256,uint256,bytes)":"0f5730f1","permitForAll(address,address,bool,uint256,uint256,bytes)":"3aea60f0"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"NoSelfPermit\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SignatureDeadlineExpired\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Unauthorized\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"permitForAll\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"permit(address,uint256,uint256,uint256,bytes)\":{\"details\":\"payable so it can be multicalled with NATIVE related actions\",\"params\":{\"deadline\":\"The deadline timestamp by which the call must be mined for the approve to work\",\"nonce\":\"a unique value, for an owner, to prevent replay attacks; an unordered nonce where the top 248 bits correspond to a word and the bottom 8 bits calculate the bit position of the word\",\"signature\":\"Concatenated data from a valid secp256k1 signature from the holder, i.e. abi.encodePacked(r, s, v)\",\"spender\":\"The account that is being approved\",\"tokenId\":\"The ID of the token that is being approved for spending\"}},\"permitForAll(address,address,bool,uint256,uint256,bytes)\":{\"details\":\"payable so it can be multicalled with NATIVE related actions\",\"params\":{\"approved\":\"The permission to set on the operator\",\"deadline\":\"The deadline timestamp by which the call must be mined for the approve to work\",\"nonce\":\"a unique value, for an owner, to prevent replay attacks; an unordered nonce where the top 248 bits correspond to a word and the bottom 8 bits calculate the bit position of the word\",\"operator\":\"The address that will be set as an operator for the owner\",\"owner\":\"The address that is setting the operator\",\"signature\":\"Concatenated data from a valid secp256k1 signature from the holder, i.e. abi.encodePacked(r, s, v)\"}}},\"title\":\"IERC721Permit_v4\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"permit(address,uint256,uint256,uint256,bytes)\":{\"notice\":\"Approve of a specific token ID for spending by spender via signature\"},\"permitForAll(address,address,bool,uint256,uint256,bytes)\":{\"notice\":\"Set an operator with full permission to an owner's tokens via signature\"}},\"notice\":\"Interface for the ERC721Permit_v4 contract\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/v4-periphery/src/interfaces/IERC721Permit_v4.sol\":\"IERC721Permit_v4\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":21000},\"remappings\":[\":@ensdomains/=lib/v4-periphery/lib/v4-core/node_modules/@ensdomains/\",\":@openzeppelin/=lib/v4-periphery/lib/v4-core/lib/openzeppelin-contracts/\",\":@uniswap/v4-core/=lib/v4-periphery/lib/v4-core/\",\":core/src/=src/\",\":ds-test/=lib/solmate/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-gas-snapshot/=lib/v4-periphery/lib/permit2/lib/forge-gas-snapshot/src/\",\":forge-std/=lib/forge-std/src/\",\":halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/\",\":hardhat/=lib/v4-periphery/lib/v4-core/node_modules/hardhat/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":permit2/=lib/v4-periphery/lib/permit2/\",\":solady/src/=lib/solady/src/\",\":solmate/=lib/solmate/\",\":super-sol/=lib/super-sol/src/\",\":transient-goodies/=lib/transient-goodies/src/\",\":v4-core/src/=lib/v4-periphery/lib/v4-core/src/\",\":v4-periphery/src/=lib/v4-periphery/src/\"]},\"sources\":{\"lib/v4-periphery/src/interfaces/IERC721Permit_v4.sol\":{\"keccak256\":\"0x103adbba724ef536abc536fe8a4d7dc12880724c562109b69f2adce4a91fa017\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://06f51b5a5a218e0bc866a83e7821be53c9db9de0ca921f16abd3d13ea0eab69d\",\"dweb:/ipfs/QmbnhLy992hpQZyphTkj7fpr6jKKVva2AzfmLiDZEuqHAk\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.26+commit.8a97fa7a"},"language":"Solidity","output":{"abi":[{"inputs":[],"type":"error","name":"NoSelfPermit"},{"inputs":[],"type":"error","name":"SignatureDeadlineExpired"},{"inputs":[],"type":"error","name":"Unauthorized"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"signature","type":"bytes"}],"stateMutability":"payable","type":"function","name":"permit"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"signature","type":"bytes"}],"stateMutability":"payable","type":"function","name":"permitForAll"}],"devdoc":{"kind":"dev","methods":{"permit(address,uint256,uint256,uint256,bytes)":{"details":"payable so it can be multicalled with NATIVE related actions","params":{"deadline":"The deadline timestamp by which the call must be mined for the approve to work","nonce":"a unique value, for an owner, to prevent replay attacks; an unordered nonce where the top 248 bits correspond to a word and the bottom 8 bits calculate the bit position of the word","signature":"Concatenated data from a valid secp256k1 signature from the holder, i.e. abi.encodePacked(r, s, v)","spender":"The account that is being approved","tokenId":"The ID of the token that is being approved for spending"}},"permitForAll(address,address,bool,uint256,uint256,bytes)":{"details":"payable so it can be multicalled with NATIVE related actions","params":{"approved":"The permission to set on the operator","deadline":"The deadline timestamp by which the call must be mined for the approve to work","nonce":"a unique value, for an owner, to prevent replay attacks; an unordered nonce where the top 248 bits correspond to a word and the bottom 8 bits calculate the bit position of the word","operator":"The address that will be set as an operator for the owner","owner":"The address that is setting the operator","signature":"Concatenated data from a valid secp256k1 signature from the holder, i.e. abi.encodePacked(r, s, v)"}}},"version":1},"userdoc":{"kind":"user","methods":{"permit(address,uint256,uint256,uint256,bytes)":{"notice":"Approve of a specific token ID for spending by spender via signature"},"permitForAll(address,address,bool,uint256,uint256,bytes)":{"notice":"Set an operator with full permission to an owner's tokens via signature"}},"version":1}},"settings":{"remappings":["@ensdomains/=lib/v4-periphery/lib/v4-core/node_modules/@ensdomains/","@openzeppelin/=lib/v4-periphery/lib/v4-core/lib/openzeppelin-contracts/","@uniswap/v4-core/=lib/v4-periphery/lib/v4-core/","core/src/=src/","ds-test/=lib/solmate/lib/ds-test/src/","erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/","forge-gas-snapshot/=lib/v4-periphery/lib/permit2/lib/forge-gas-snapshot/src/","forge-std/=lib/forge-std/src/","halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/","hardhat/=lib/v4-periphery/lib/v4-core/node_modules/hardhat/","openzeppelin-contracts/=lib/openzeppelin-contracts/","permit2/=lib/v4-periphery/lib/permit2/","solady/src/=lib/solady/src/","solmate/=lib/solmate/","super-sol/=lib/super-sol/src/","transient-goodies/=lib/transient-goodies/src/","v4-core/src/=lib/v4-periphery/lib/v4-core/src/","v4-periphery/src/=lib/v4-periphery/src/"],"optimizer":{"enabled":true,"runs":21000},"metadata":{"bytecodeHash":"none"},"compilationTarget":{"lib/v4-periphery/src/interfaces/IERC721Permit_v4.sol":"IERC721Permit_v4"},"evmVersion":"cancun","libraries":{}},"sources":{"lib/v4-periphery/src/interfaces/IERC721Permit_v4.sol":{"keccak256":"0x103adbba724ef536abc536fe8a4d7dc12880724c562109b69f2adce4a91fa017","urls":["bzz-raw://06f51b5a5a218e0bc866a83e7821be53c9db9de0ca921f16abd3d13ea0eab69d","dweb:/ipfs/QmbnhLy992hpQZyphTkj7fpr6jKKVva2AzfmLiDZEuqHAk"],"license":"MIT"}},"version":1},"ast":{"absolutePath":"lib/v4-periphery/src/interfaces/IERC721Permit_v4.sol","id":70314,"exportedSymbols":{"IERC721Permit_v4":[70313]},"nodeType":"SourceUnit","src":"32:2105:125","nodes":[{"id":70275,"nodeType":"PragmaDirective","src":"32:23:125","nodes":[],"literals":["solidity","^","0.8",".0"]},{"id":70313,"nodeType":"ContractDefinition","src":"140:1996:125","nodes":[{"id":70278,"nodeType":"ErrorDefinition","src":"173:33:125","nodes":[],"errorSelector":"5a9165ff","name":"SignatureDeadlineExpired","nameLocation":"179:24:125","parameters":{"id":70277,"nodeType":"ParameterList","parameters":[],"src":"203:2:125"}},{"id":70280,"nodeType":"ErrorDefinition","src":"211:21:125","nodes":[],"errorSelector":"80e05c00","name":"NoSelfPermit","nameLocation":"217:12:125","parameters":{"id":70279,"nodeType":"ParameterList","parameters":[],"src":"229:2:125"}},{"id":70282,"nodeType":"ErrorDefinition","src":"237:21:125","nodes":[],"errorSelector":"82b42900","name":"Unauthorized","nameLocation":"243:12:125","parameters":{"id":70281,"nodeType":"ParameterList","parameters":[],"src":"255:2:125"}},{"id":70296,"nodeType":"FunctionDefinition","src":"989:142:125","nodes":[],"documentation":{"id":70283,"nodeType":"StructuredDocumentation","src":"264:720:125","text":"@notice Approve of a specific token ID for spending by spender via signature\n @param spender The account that is being approved\n @param tokenId The ID of the token that is being approved for spending\n @param deadline The deadline timestamp by which the call must be mined for the approve to work\n @param nonce a unique value, for an owner, to prevent replay attacks; an unordered nonce where the top 248 bits correspond to a word and the bottom 8 bits calculate the bit position of the word\n @param signature Concatenated data from a valid secp256k1 signature from the holder, i.e. abi.encodePacked(r, s, v)\n @dev payable so it can be multicalled with NATIVE related actions"},"functionSelector":"0f5730f1","implemented":false,"kind":"function","modifiers":[],"name":"permit","nameLocation":"998:6:125","parameters":{"id":70294,"nodeType":"ParameterList","parameters":[{"constant":false,"id":70285,"mutability":"mutable","name":"spender","nameLocation":"1013:7:125","nodeType":"VariableDeclaration","scope":70296,"src":"1005:15:125","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":70284,"name":"address","nodeType":"ElementaryTypeName","src":"1005:7:125","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":70287,"mutability":"mutable","name":"tokenId","nameLocation":"1030:7:125","nodeType":"VariableDeclaration","scope":70296,"src":"1022:15:125","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":70286,"name":"uint256","nodeType":"ElementaryTypeName","src":"1022:7:125","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":70289,"mutability":"mutable","name":"deadline","nameLocation":"1047:8:125","nodeType":"VariableDeclaration","scope":70296,"src":"1039:16:125","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":70288,"name":"uint256","nodeType":"ElementaryTypeName","src":"1039:7:125","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":70291,"mutability":"mutable","name":"nonce","nameLocation":"1065:5:125","nodeType":"VariableDeclaration","scope":70296,"src":"1057:13:125","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":70290,"name":"uint256","nodeType":"ElementaryTypeName","src":"1057:7:125","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":70293,"mutability":"mutable","name":"signature","nameLocation":"1087:9:125","nodeType":"VariableDeclaration","scope":70296,"src":"1072:24:125","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":70292,"name":"bytes","nodeType":"ElementaryTypeName","src":"1072:5:125","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1004:93:125"},"returnParameters":{"id":70295,"nodeType":"ParameterList","parameters":[],"src":"1130:0:125"},"scope":70313,"stateMutability":"payable","virtual":false,"visibility":"external"},{"id":70312,"nodeType":"FunctionDefinition","src":"1934:200:125","nodes":[],"documentation":{"id":70297,"nodeType":"StructuredDocumentation","src":"1137:792:125","text":"@notice Set an operator with full permission to an owner's tokens via signature\n @param owner The address that is setting the operator\n @param operator The address that will be set as an operator for the owner\n @param approved The permission to set on the operator\n @param deadline The deadline timestamp by which the call must be mined for the approve to work\n @param nonce a unique value, for an owner, to prevent replay attacks; an unordered nonce where the top 248 bits correspond to a word and the bottom 8 bits calculate the bit position of the word\n @param signature Concatenated data from a valid secp256k1 signature from the holder, i.e. abi.encodePacked(r, s, v)\n @dev payable so it can be multicalled with NATIVE related actions"},"functionSelector":"3aea60f0","implemented":false,"kind":"function","modifiers":[],"name":"permitForAll","nameLocation":"1943:12:125","parameters":{"id":70310,"nodeType":"ParameterList","parameters":[{"constant":false,"id":70299,"mutability":"mutable","name":"owner","nameLocation":"1973:5:125","nodeType":"VariableDeclaration","scope":70312,"src":"1965:13:125","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":70298,"name":"address","nodeType":"ElementaryTypeName","src":"1965:7:125","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":70301,"mutability":"mutable","name":"operator","nameLocation":"1996:8:125","nodeType":"VariableDeclaration","scope":70312,"src":"1988:16:125","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":70300,"name":"address","nodeType":"ElementaryTypeName","src":"1988:7:125","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":70303,"mutability":"mutable","name":"approved","nameLocation":"2019:8:125","nodeType":"VariableDeclaration","scope":70312,"src":"2014:13:125","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":70302,"name":"bool","nodeType":"ElementaryTypeName","src":"2014:4:125","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":70305,"mutability":"mutable","name":"deadline","nameLocation":"2045:8:125","nodeType":"VariableDeclaration","scope":70312,"src":"2037:16:125","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":70304,"name":"uint256","nodeType":"ElementaryTypeName","src":"2037:7:125","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":70307,"mutability":"mutable","name":"nonce","nameLocation":"2071:5:125","nodeType":"VariableDeclaration","scope":70312,"src":"2063:13:125","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":70306,"name":"uint256","nodeType":"ElementaryTypeName","src":"2063:7:125","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":70309,"mutability":"mutable","name":"signature","nameLocation":"2101:9:125","nodeType":"VariableDeclaration","scope":70312,"src":"2086:24:125","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":70308,"name":"bytes","nodeType":"ElementaryTypeName","src":"2086:5:125","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1955:161:125"},"returnParameters":{"id":70311,"nodeType":"ParameterList","parameters":[],"src":"2133:0:125"},"scope":70313,"stateMutability":"payable","virtual":false,"visibility":"external"}],"abstract":false,"baseContracts":[],"canonicalName":"IERC721Permit_v4","contractDependencies":[],"contractKind":"interface","documentation":{"id":70276,"nodeType":"StructuredDocumentation","src":"57:83:125","text":"@title IERC721Permit_v4\n @notice Interface for the ERC721Permit_v4 contract"},"fullyImplemented":false,"linearizedBaseContracts":[70313],"name":"IERC721Permit_v4","nameLocation":"150:16:125","scope":70314,"usedErrors":[70278,70280,70282],"usedEvents":[]}],"license":"MIT"},"id":125}