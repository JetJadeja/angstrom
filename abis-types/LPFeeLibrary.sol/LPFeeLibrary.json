{"abi":[{"type":"function","name":"DYNAMIC_FEE_FLAG","inputs":[],"outputs":[{"name":"","type":"uint24","internalType":"uint24"}],"stateMutability":"view"},{"type":"function","name":"MAX_LP_FEE","inputs":[],"outputs":[{"name":"","type":"uint24","internalType":"uint24"}],"stateMutability":"view"},{"type":"function","name":"OVERRIDE_FEE_FLAG","inputs":[],"outputs":[{"name":"","type":"uint24","internalType":"uint24"}],"stateMutability":"view"},{"type":"function","name":"REMOVE_OVERRIDE_MASK","inputs":[],"outputs":[{"name":"","type":"uint24","internalType":"uint24"}],"stateMutability":"view"},{"type":"error","name":"LPFeeTooLarge","inputs":[{"name":"fee","type":"uint24","internalType":"uint24"}]}],"bytecode":{"object":"0x609d6032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106050575f3560e01c80633b01d64d1460545780633fc48eba1460755780636f95ebcf14607e578063f26ef49d146087575b5f80fd5b605d6240000081565b60405162ffffff909116815260200160405180910390f35b605d620f424081565b605d62bfffff81565b605d628000008156fea164736f6c634300081a000a","sourceMap":"166:3429:88:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;166:3429:88;;;;;;;;;;;;;;;;;","linkReferences":{}},"deployedBytecode":{"object":"0x73000000000000000000000000000000000000000030146080604052600436106050575f3560e01c80633b01d64d1460545780633fc48eba1460755780636f95ebcf14607e578063f26ef49d146087575b5f80fd5b605d6240000081565b60405162ffffff909116815260200160405180910390f35b605d620f424081565b605d62bfffff81565b605d628000008156fea164736f6c634300081a000a","sourceMap":"166:3429:88:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;776:51;;819:8;776:51;;;;;196:8:255;184:21;;;166:40;;154:2;139:18;776:51:88;;;;;;;1075:43;;1111:7;1075:43;;929:54;;975:8;929:54;;510:50;;552:8;510:50;","linkReferences":{}},"methodIdentifiers":{"DYNAMIC_FEE_FLAG()":"f26ef49d","MAX_LP_FEE()":"3fc48eba","OVERRIDE_FEE_FLAG()":"3b01d64d","REMOVE_OVERRIDE_MASK()":"6f95ebcf"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"}],\"name\":\"LPFeeTooLarge\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DYNAMIC_FEE_FLAG\",\"outputs\":[{\"internalType\":\"uint24\",\"name\":\"\",\"type\":\"uint24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_LP_FEE\",\"outputs\":[{\"internalType\":\"uint24\",\"name\":\"\",\"type\":\"uint24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"OVERRIDE_FEE_FLAG\",\"outputs\":[{\"internalType\":\"uint24\",\"name\":\"\",\"type\":\"uint24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"REMOVE_OVERRIDE_MASK\",\"outputs\":[{\"internalType\":\"uint24\",\"name\":\"\",\"type\":\"uint24\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"errors\":{\"LPFeeTooLarge(uint24)\":[{\"notice\":\"Thrown when the static or dynamic fee on a pool exceeds 100%.\"}]},\"kind\":\"user\",\"methods\":{\"DYNAMIC_FEE_FLAG()\":{\"notice\":\"An lp fee of exactly 0b1000000... signals a dynamic fee pool. This isn't a valid static fee as it is > MAX_LP_FEE\"},\"MAX_LP_FEE()\":{\"notice\":\"the lp fee is represented in hundredths of a bip, so the max is 100%\"},\"OVERRIDE_FEE_FLAG()\":{\"notice\":\"the second bit of the fee returned by beforeSwap is used to signal if the stored LP fee should be overridden in this swap\"},\"REMOVE_OVERRIDE_MASK()\":{\"notice\":\"mask to remove the override fee flag from a fee returned by the beforeSwaphook\"}},\"notice\":\"Library of helper functions for a pools LP fee\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/v4-periphery/lib/v4-core/src/libraries/LPFeeLibrary.sol\":\"LPFeeLibrary\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":21000},\"remappings\":[\":@ensdomains/=lib/v4-periphery/lib/v4-core/node_modules/@ensdomains/\",\":@openzeppelin/=lib/v4-periphery/lib/v4-core/lib/openzeppelin-contracts/\",\":@uniswap/v4-core/=lib/v4-periphery/lib/v4-core/\",\":core/src/=src/\",\":ds-test/=lib/solmate/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-gas-snapshot/=lib/v4-periphery/lib/permit2/lib/forge-gas-snapshot/src/\",\":forge-std/=lib/forge-std/src/\",\":halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/\",\":hardhat/=lib/v4-periphery/lib/v4-core/node_modules/hardhat/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":permit2/=lib/v4-periphery/lib/permit2/\",\":solady/src/=lib/solady/src/\",\":solmate/=lib/solmate/\",\":super-sol/=lib/super-sol/src/\",\":transient-goodies/=lib/transient-goodies/src/\",\":v4-core/src/=lib/v4-periphery/lib/v4-core/src/\",\":v4-periphery/src/=lib/v4-periphery/src/\"]},\"sources\":{\"lib/v4-periphery/lib/v4-core/src/libraries/CustomRevert.sol\":{\"keccak256\":\"0x111ed3031b6990c80a93ae35dde6b6ac0b7e6af471388fdd7461e91edda9b7de\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c9ea883c98d6ae1829160d0977bb5195761cfd5bc81692d0a941f45717f594cd\",\"dweb:/ipfs/QmZPwxzaeMNv536wzrAMrMswu7vMHuqPVpjcqL3YvCMoxt\"]},\"lib/v4-periphery/lib/v4-core/src/libraries/LPFeeLibrary.sol\":{\"keccak256\":\"0xbf6914e01014e7c1044111feb7df7a3d96bb503b3da827ad8464b1955580d13b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33823c20a91882c9aacdcbb02f0558c05209f4d5954aa6dd4fa17c95664db475\",\"dweb:/ipfs/QmR7owkFgpfztpp1QUg3ut3nw9iPVQqLGP4hzgmZtRUQ2J\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.26+commit.8a97fa7a"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"uint24","name":"fee","type":"uint24"}],"type":"error","name":"LPFeeTooLarge"},{"inputs":[],"stateMutability":"view","type":"function","name":"DYNAMIC_FEE_FLAG","outputs":[{"internalType":"uint24","name":"","type":"uint24"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"MAX_LP_FEE","outputs":[{"internalType":"uint24","name":"","type":"uint24"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"OVERRIDE_FEE_FLAG","outputs":[{"internalType":"uint24","name":"","type":"uint24"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"REMOVE_OVERRIDE_MASK","outputs":[{"internalType":"uint24","name":"","type":"uint24"}]}],"devdoc":{"kind":"dev","methods":{},"version":1},"userdoc":{"kind":"user","methods":{"DYNAMIC_FEE_FLAG()":{"notice":"An lp fee of exactly 0b1000000... signals a dynamic fee pool. This isn't a valid static fee as it is > MAX_LP_FEE"},"MAX_LP_FEE()":{"notice":"the lp fee is represented in hundredths of a bip, so the max is 100%"},"OVERRIDE_FEE_FLAG()":{"notice":"the second bit of the fee returned by beforeSwap is used to signal if the stored LP fee should be overridden in this swap"},"REMOVE_OVERRIDE_MASK()":{"notice":"mask to remove the override fee flag from a fee returned by the beforeSwaphook"}},"version":1}},"settings":{"remappings":["@ensdomains/=lib/v4-periphery/lib/v4-core/node_modules/@ensdomains/","@openzeppelin/=lib/v4-periphery/lib/v4-core/lib/openzeppelin-contracts/","@uniswap/v4-core/=lib/v4-periphery/lib/v4-core/","core/src/=src/","ds-test/=lib/solmate/lib/ds-test/src/","erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/","forge-gas-snapshot/=lib/v4-periphery/lib/permit2/lib/forge-gas-snapshot/src/","forge-std/=lib/forge-std/src/","halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/","hardhat/=lib/v4-periphery/lib/v4-core/node_modules/hardhat/","openzeppelin-contracts/=lib/openzeppelin-contracts/","permit2/=lib/v4-periphery/lib/permit2/","solady/src/=lib/solady/src/","solmate/=lib/solmate/","super-sol/=lib/super-sol/src/","transient-goodies/=lib/transient-goodies/src/","v4-core/src/=lib/v4-periphery/lib/v4-core/src/","v4-periphery/src/=lib/v4-periphery/src/"],"optimizer":{"enabled":true,"runs":21000},"metadata":{"bytecodeHash":"none"},"compilationTarget":{"lib/v4-periphery/lib/v4-core/src/libraries/LPFeeLibrary.sol":"LPFeeLibrary"},"evmVersion":"cancun","libraries":{}},"sources":{"lib/v4-periphery/lib/v4-core/src/libraries/CustomRevert.sol":{"keccak256":"0x111ed3031b6990c80a93ae35dde6b6ac0b7e6af471388fdd7461e91edda9b7de","urls":["bzz-raw://c9ea883c98d6ae1829160d0977bb5195761cfd5bc81692d0a941f45717f594cd","dweb:/ipfs/QmZPwxzaeMNv536wzrAMrMswu7vMHuqPVpjcqL3YvCMoxt"],"license":"MIT"},"lib/v4-periphery/lib/v4-core/src/libraries/LPFeeLibrary.sol":{"keccak256":"0xbf6914e01014e7c1044111feb7df7a3d96bb503b3da827ad8464b1955580d13b","urls":["bzz-raw://33823c20a91882c9aacdcbb02f0558c05209f4d5954aa6dd4fa17c95664db475","dweb:/ipfs/QmR7owkFgpfztpp1QUg3ut3nw9iPVQqLGP4hzgmZtRUQ2J"],"license":"MIT"}},"version":1},"ast":{"absolutePath":"lib/v4-periphery/lib/v4-core/src/libraries/LPFeeLibrary.sol","id":61628,"exportedSymbols":{"CustomRevert":[60124],"LPFeeLibrary":[61627]},"nodeType":"SourceUnit","src":"32:3564:88","nodes":[{"id":61480,"nodeType":"PragmaDirective","src":"32:23:88","nodes":[],"literals":["solidity","^","0.8",".0"]},{"id":61482,"nodeType":"ImportDirective","src":"57:48:88","nodes":[],"absolutePath":"lib/v4-periphery/lib/v4-core/src/libraries/CustomRevert.sol","file":"./CustomRevert.sol","nameLocation":"-1:-1:-1","scope":61628,"sourceUnit":60125,"symbolAliases":[{"foreign":{"id":61481,"name":"CustomRevert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60124,"src":"65:12:88","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":61627,"nodeType":"ContractDefinition","src":"166:3429:88","nodes":[{"id":61486,"nodeType":"UsingForDirective","src":"193:30:88","nodes":[],"global":false,"libraryName":{"id":61484,"name":"LPFeeLibrary","nameLocations":["199:12:88"],"nodeType":"IdentifierPath","referencedDeclaration":61627,"src":"199:12:88"},"typeName":{"id":61485,"name":"uint24","nodeType":"ElementaryTypeName","src":"216:6:88","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}}},{"id":61489,"nodeType":"UsingForDirective","src":"228:30:88","nodes":[],"global":false,"libraryName":{"id":61487,"name":"CustomRevert","nameLocations":["234:12:88"],"nodeType":"IdentifierPath","referencedDeclaration":60124,"src":"234:12:88"},"typeName":{"id":61488,"name":"bytes4","nodeType":"ElementaryTypeName","src":"251:6:88","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}},{"id":61494,"nodeType":"ErrorDefinition","src":"342:32:88","nodes":[],"documentation":{"id":61490,"nodeType":"StructuredDocumentation","src":"264:73:88","text":"@notice Thrown when the static or dynamic fee on a pool exceeds 100%."},"errorSelector":"14002113","name":"LPFeeTooLarge","nameLocation":"348:13:88","parameters":{"id":61493,"nodeType":"ParameterList","parameters":[{"constant":false,"id":61492,"mutability":"mutable","name":"fee","nameLocation":"369:3:88","nodeType":"VariableDeclaration","scope":61494,"src":"362:10:88","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":61491,"name":"uint24","nodeType":"ElementaryTypeName","src":"362:6:88","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"361:12:88"}},{"id":61498,"nodeType":"VariableDeclaration","src":"510:50:88","nodes":[],"constant":true,"documentation":{"id":61495,"nodeType":"StructuredDocumentation","src":"380:125:88","text":"@notice An lp fee of exactly 0b1000000... signals a dynamic fee pool. This isn't a valid static fee as it is > MAX_LP_FEE"},"functionSelector":"f26ef49d","mutability":"constant","name":"DYNAMIC_FEE_FLAG","nameLocation":"533:16:88","scope":61627,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":61496,"name":"uint24","nodeType":"ElementaryTypeName","src":"510:6:88","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"value":{"hexValue":"3078383030303030","id":61497,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"552:8:88","typeDescriptions":{"typeIdentifier":"t_rational_8388608_by_1","typeString":"int_const 8388608"},"value":"0x800000"},"visibility":"public"},{"id":61502,"nodeType":"VariableDeclaration","src":"776:51:88","nodes":[],"constant":true,"documentation":{"id":61499,"nodeType":"StructuredDocumentation","src":"567:133:88","text":"@notice the second bit of the fee returned by beforeSwap is used to signal if the stored LP fee should be overridden in this swap"},"functionSelector":"3b01d64d","mutability":"constant","name":"OVERRIDE_FEE_FLAG","nameLocation":"799:17:88","scope":61627,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":61500,"name":"uint24","nodeType":"ElementaryTypeName","src":"776:6:88","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"value":{"hexValue":"3078343030303030","id":61501,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"819:8:88","typeDescriptions":{"typeIdentifier":"t_rational_4194304_by_1","typeString":"int_const 4194304"},"value":"0x400000"},"visibility":"public"},{"id":61506,"nodeType":"VariableDeclaration","src":"929:54:88","nodes":[],"constant":true,"documentation":{"id":61503,"nodeType":"StructuredDocumentation","src":"834:90:88","text":"@notice mask to remove the override fee flag from a fee returned by the beforeSwaphook"},"functionSelector":"6f95ebcf","mutability":"constant","name":"REMOVE_OVERRIDE_MASK","nameLocation":"952:20:88","scope":61627,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":61504,"name":"uint24","nodeType":"ElementaryTypeName","src":"929:6:88","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"value":{"hexValue":"3078424646464646","id":61505,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"975:8:88","typeDescriptions":{"typeIdentifier":"t_rational_12582911_by_1","typeString":"int_const 12582911"},"value":"0xBFFFFF"},"visibility":"public"},{"id":61510,"nodeType":"VariableDeclaration","src":"1075:43:88","nodes":[],"constant":true,"documentation":{"id":61507,"nodeType":"StructuredDocumentation","src":"990:80:88","text":"@notice the lp fee is represented in hundredths of a bip, so the max is 100%"},"functionSelector":"3fc48eba","mutability":"constant","name":"MAX_LP_FEE","nameLocation":"1098:10:88","scope":61627,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":61508,"name":"uint24","nodeType":"ElementaryTypeName","src":"1075:6:88","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"value":{"hexValue":"31303030303030","id":61509,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1111:7:88","typeDescriptions":{"typeIdentifier":"t_rational_1000000_by_1","typeString":"int_const 1000000"},"value":"1000000"},"visibility":"public"},{"id":61523,"nodeType":"FunctionDefinition","src":"1298:112:88","nodes":[],"body":{"id":61522,"nodeType":"Block","src":"1362:48:88","nodes":[],"statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint24","typeString":"uint24"},"id":61520,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":61518,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":61513,"src":"1379:4:88","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":61519,"name":"DYNAMIC_FEE_FLAG","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":61498,"src":"1387:16:88","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"src":"1379:24:88","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":61517,"id":61521,"nodeType":"Return","src":"1372:31:88"}]},"documentation":{"id":61511,"nodeType":"StructuredDocumentation","src":"1125:168:88","text":"@notice returns true if a pool's LP fee signals that the pool has a dynamic fee\n @param self The fee to check\n @return bool True of the fee is dynamic"},"implemented":true,"kind":"function","modifiers":[],"name":"isDynamicFee","nameLocation":"1307:12:88","parameters":{"id":61514,"nodeType":"ParameterList","parameters":[{"constant":false,"id":61513,"mutability":"mutable","name":"self","nameLocation":"1327:4:88","nodeType":"VariableDeclaration","scope":61523,"src":"1320:11:88","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":61512,"name":"uint24","nodeType":"ElementaryTypeName","src":"1320:6:88","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"1319:13:88"},"returnParameters":{"id":61517,"nodeType":"ParameterList","parameters":[{"constant":false,"id":61516,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":61523,"src":"1356:4:88","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":61515,"name":"bool","nodeType":"ElementaryTypeName","src":"1356:4:88","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1355:6:88"},"scope":61627,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":61536,"nodeType":"FunctionDefinition","src":"1591:101:88","nodes":[],"body":{"id":61535,"nodeType":"Block","src":"1650:42:88","nodes":[],"statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint24","typeString":"uint24"},"id":61533,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":61531,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":61526,"src":"1667:4:88","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":61532,"name":"MAX_LP_FEE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":61510,"src":"1675:10:88","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"src":"1667:18:88","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":61530,"id":61534,"nodeType":"Return","src":"1660:25:88"}]},"documentation":{"id":61524,"nodeType":"StructuredDocumentation","src":"1416:170:88","text":"@notice returns true if an LP fee is valid, aka not above the maximum permitted fee\n @param self The fee to check\n @return bool True of the fee is valid"},"implemented":true,"kind":"function","modifiers":[],"name":"isValid","nameLocation":"1600:7:88","parameters":{"id":61527,"nodeType":"ParameterList","parameters":[{"constant":false,"id":61526,"mutability":"mutable","name":"self","nameLocation":"1615:4:88","nodeType":"VariableDeclaration","scope":61536,"src":"1608:11:88","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":61525,"name":"uint24","nodeType":"ElementaryTypeName","src":"1608:6:88","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"1607:13:88"},"returnParameters":{"id":61530,"nodeType":"ParameterList","parameters":[{"constant":false,"id":61529,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":61536,"src":"1644:4:88","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":61528,"name":"bool","nodeType":"ElementaryTypeName","src":"1644:4:88","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1643:6:88"},"scope":61627,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":61556,"nodeType":"FunctionDefinition","src":"1833:122:88","nodes":[],"body":{"id":61555,"nodeType":"Block","src":"1878:77:88","nodes":[],"statements":[{"condition":{"id":61545,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"1892:15:88","subExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":61542,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":61539,"src":"1893:4:88","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"id":61543,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1898:7:88","memberName":"isValid","nodeType":"MemberAccess","referencedDeclaration":61536,"src":"1893:12:88","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint24_$returns$_t_bool_$attached_to$_t_uint24_$","typeString":"function (uint24) pure returns (bool)"}},"id":61544,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1893:14:88","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":61554,"nodeType":"IfStatement","src":"1888:60:88","trueBody":{"expression":{"arguments":[{"id":61551,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":61539,"src":"1943:4:88","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint24","typeString":"uint24"}],"expression":{"expression":{"id":61546,"name":"LPFeeTooLarge","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":61494,"src":"1909:13:88","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint24_$returns$_t_error_$","typeString":"function (uint24) pure returns (error)"}},"id":61549,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1923:8:88","memberName":"selector","nodeType":"MemberAccess","src":"1909:22:88","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"id":61550,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1932:10:88","memberName":"revertWith","nodeType":"MemberAccess","referencedDeclaration":60070,"src":"1909:33:88","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes4_$_t_uint160_$returns$__$attached_to$_t_bytes4_$","typeString":"function (bytes4,uint160) pure"}},"id":61552,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1909:39:88","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":61553,"nodeType":"ExpressionStatement","src":"1909:39:88"}}]},"documentation":{"id":61537,"nodeType":"StructuredDocumentation","src":"1698:130:88","text":"@notice validates whether an LP fee is larger than the maximum, and reverts if invalid\n @param self The fee to validate"},"implemented":true,"kind":"function","modifiers":[],"name":"validate","nameLocation":"1842:8:88","parameters":{"id":61540,"nodeType":"ParameterList","parameters":[{"constant":false,"id":61539,"mutability":"mutable","name":"self","nameLocation":"1858:4:88","nodeType":"VariableDeclaration","scope":61556,"src":"1851:11:88","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":61538,"name":"uint24","nodeType":"ElementaryTypeName","src":"1851:6:88","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"1850:13:88"},"returnParameters":{"id":61541,"nodeType":"ParameterList","parameters":[],"src":"1878:0:88"},"scope":61627,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":61578,"nodeType":"FunctionDefinition","src":"2333:220:88","nodes":[],"body":{"id":61577,"nodeType":"Block","src":"2402:151:88","nodes":[],"statements":[{"condition":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":61564,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":61559,"src":"2471:4:88","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"id":61565,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2476:12:88","memberName":"isDynamicFee","nodeType":"MemberAccess","referencedDeclaration":61523,"src":"2471:17:88","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint24_$returns$_t_bool_$attached_to$_t_uint24_$","typeString":"function (uint24) pure returns (bool)"}},"id":61566,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2471:19:88","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":61569,"nodeType":"IfStatement","src":"2467:33:88","trueBody":{"expression":{"hexValue":"30","id":61567,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2499:1:88","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":61563,"id":61568,"nodeType":"Return","src":"2492:8:88"}},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":61570,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":61559,"src":"2510:4:88","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"id":61572,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2515:8:88","memberName":"validate","nodeType":"MemberAccess","referencedDeclaration":61556,"src":"2510:13:88","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint24_$returns$__$attached_to$_t_uint24_$","typeString":"function (uint24) pure"}},"id":61573,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2510:15:88","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":61574,"nodeType":"ExpressionStatement","src":"2510:15:88"},{"expression":{"id":61575,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":61559,"src":"2542:4:88","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"functionReturnParameters":61563,"id":61576,"nodeType":"Return","src":"2535:11:88"}]},"documentation":{"id":61557,"nodeType":"StructuredDocumentation","src":"1961:367:88","text":"@notice gets and validates the initial LP fee for a pool. Dynamic fee pools have an initial fee of 0.\n @dev if a dynamic fee pool wants a non-0 initial fee, it should call `updateDynamicLPFee` in the afterInitialize hook\n @param self The fee to get the initial LP from\n @return initialFee 0 if the fee is dynamic, otherwise the fee (if valid)"},"implemented":true,"kind":"function","modifiers":[],"name":"getInitialLPFee","nameLocation":"2342:15:88","parameters":{"id":61560,"nodeType":"ParameterList","parameters":[{"constant":false,"id":61559,"mutability":"mutable","name":"self","nameLocation":"2365:4:88","nodeType":"VariableDeclaration","scope":61578,"src":"2358:11:88","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":61558,"name":"uint24","nodeType":"ElementaryTypeName","src":"2358:6:88","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"2357:13:88"},"returnParameters":{"id":61563,"nodeType":"ParameterList","parameters":[{"constant":false,"id":61562,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":61578,"src":"2394:6:88","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":61561,"name":"uint24","nodeType":"ElementaryTypeName","src":"2394:6:88","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"2393:8:88"},"scope":61627,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":61593,"nodeType":"FunctionDefinition","src":"2757:115:88","nodes":[],"body":{"id":61592,"nodeType":"Block","src":"2819:53:88","nodes":[],"statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint24","typeString":"uint24"},"id":61590,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint24","typeString":"uint24"},"id":61588,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":61586,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":61581,"src":"2836:4:88","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":61587,"name":"OVERRIDE_FEE_FLAG","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":61502,"src":"2843:17:88","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"src":"2836:24:88","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":61589,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2864:1:88","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2836:29:88","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":61585,"id":61591,"nodeType":"Return","src":"2829:36:88"}]},"documentation":{"id":61579,"nodeType":"StructuredDocumentation","src":"2559:193:88","text":"@notice returns true if the fee has the override flag set (2nd highest bit of the uint24)\n @param self The fee to check\n @return bool True of the fee has the override flag set"},"implemented":true,"kind":"function","modifiers":[],"name":"isOverride","nameLocation":"2766:10:88","parameters":{"id":61582,"nodeType":"ParameterList","parameters":[{"constant":false,"id":61581,"mutability":"mutable","name":"self","nameLocation":"2784:4:88","nodeType":"VariableDeclaration","scope":61593,"src":"2777:11:88","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":61580,"name":"uint24","nodeType":"ElementaryTypeName","src":"2777:6:88","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"2776:13:88"},"returnParameters":{"id":61585,"nodeType":"ParameterList","parameters":[{"constant":false,"id":61584,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":61593,"src":"2813:4:88","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":61583,"name":"bool","nodeType":"ElementaryTypeName","src":"2813:4:88","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2812:6:88"},"scope":61627,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":61606,"nodeType":"FunctionDefinition","src":"3058:123:88","nodes":[],"body":{"id":61605,"nodeType":"Block","src":"3130:51:88","nodes":[],"statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint24","typeString":"uint24"},"id":61603,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":61601,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":61596,"src":"3147:4:88","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":61602,"name":"REMOVE_OVERRIDE_MASK","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":61506,"src":"3154:20:88","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"src":"3147:27:88","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"functionReturnParameters":61600,"id":61604,"nodeType":"Return","src":"3140:34:88"}]},"documentation":{"id":61594,"nodeType":"StructuredDocumentation","src":"2878:175:88","text":"@notice returns a fee with the override flag removed\n @param self The fee to remove the override flag from\n @return fee The fee without the override flag set"},"implemented":true,"kind":"function","modifiers":[],"name":"removeOverrideFlag","nameLocation":"3067:18:88","parameters":{"id":61597,"nodeType":"ParameterList","parameters":[{"constant":false,"id":61596,"mutability":"mutable","name":"self","nameLocation":"3093:4:88","nodeType":"VariableDeclaration","scope":61606,"src":"3086:11:88","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":61595,"name":"uint24","nodeType":"ElementaryTypeName","src":"3086:6:88","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"3085:13:88"},"returnParameters":{"id":61600,"nodeType":"ParameterList","parameters":[{"constant":false,"id":61599,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":61606,"src":"3122:6:88","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":61598,"name":"uint24","nodeType":"ElementaryTypeName","src":"3122:6:88","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"3121:8:88"},"scope":61627,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":61626,"nodeType":"FunctionDefinition","src":"3434:159:88","nodes":[],"body":{"id":61625,"nodeType":"Block","src":"3521:72:88","nodes":[],"statements":[{"expression":{"id":61618,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":61614,"name":"fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":61612,"src":"3531:3:88","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":61615,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":61609,"src":"3537:4:88","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"id":61616,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3542:18:88","memberName":"removeOverrideFlag","nodeType":"MemberAccess","referencedDeclaration":61606,"src":"3537:23:88","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint24_$returns$_t_uint24_$attached_to$_t_uint24_$","typeString":"function (uint24) pure returns (uint24)"}},"id":61617,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3537:25:88","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"src":"3531:31:88","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"id":61619,"nodeType":"ExpressionStatement","src":"3531:31:88"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":61620,"name":"fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":61612,"src":"3572:3:88","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"id":61622,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3576:8:88","memberName":"validate","nodeType":"MemberAccess","referencedDeclaration":61556,"src":"3572:12:88","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint24_$returns$__$attached_to$_t_uint24_$","typeString":"function (uint24) pure"}},"id":61623,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3572:14:88","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":61624,"nodeType":"ExpressionStatement","src":"3572:14:88"}]},"documentation":{"id":61607,"nodeType":"StructuredDocumentation","src":"3187:242:88","text":"@notice Removes the override flag and validates the fee (reverts if the fee is too large)\n @param self The fee to remove the override flag from, and then validate\n @return fee The fee without the override flag set (if valid)"},"implemented":true,"kind":"function","modifiers":[],"name":"removeOverrideFlagAndValidate","nameLocation":"3443:29:88","parameters":{"id":61610,"nodeType":"ParameterList","parameters":[{"constant":false,"id":61609,"mutability":"mutable","name":"self","nameLocation":"3480:4:88","nodeType":"VariableDeclaration","scope":61626,"src":"3473:11:88","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":61608,"name":"uint24","nodeType":"ElementaryTypeName","src":"3473:6:88","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"3472:13:88"},"returnParameters":{"id":61613,"nodeType":"ParameterList","parameters":[{"constant":false,"id":61612,"mutability":"mutable","name":"fee","nameLocation":"3516:3:88","nodeType":"VariableDeclaration","scope":61626,"src":"3509:10:88","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":61611,"name":"uint24","nodeType":"ElementaryTypeName","src":"3509:6:88","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"3508:12:88"},"scope":61627,"stateMutability":"pure","virtual":false,"visibility":"internal"}],"abstract":false,"baseContracts":[],"canonicalName":"LPFeeLibrary","contractDependencies":[],"contractKind":"library","documentation":{"id":61483,"nodeType":"StructuredDocumentation","src":"107:59:88","text":"@notice Library of helper functions for a pools LP fee"},"fullyImplemented":true,"linearizedBaseContracts":[61627],"name":"LPFeeLibrary","nameLocation":"174:12:88","scope":61628,"usedErrors":[61494],"usedEvents":[]}],"license":"MIT"},"id":88}